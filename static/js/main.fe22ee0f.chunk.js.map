{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","TextForm","useState","text","settext","heading","value","onChange","event","target","rows","placeholder","onClick","newText","toUpperCase","split","filter","element","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAEe,SAASA,EAAOC,GAC3B,OACI,mCACA,qBAAKC,UAAU,gDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SAAsCF,EAAMG,QAC5C,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMH,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,SACE,oBAAIJ,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,+B,WCXH,SAASI,EAASN,GAC7B,IAYA,EAAwBO,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACI,sBAAKR,UAAU,YAAf,UACI,6BAAKD,EAAMU,UACX,qBAAKT,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAeU,MAAOH,EAAMI,SATzC,SAACC,GACpBJ,EAAQI,EAAMC,OAAOH,QAQiEN,GAAG,QAAQU,KAAK,IAAIC,YAAY,2BAE9G,wBAAQf,UAAU,oBAAoBgB,QApBhC,WACd,IAAIC,EAAUV,EAAKW,cACnBV,EAAQS,IAkBA,mCACA,wBAAQjB,UAAU,oBAAoBgB,QAhBhC,WAEdR,EADc,KAeN,uBAEJ,sBAAKR,UAAU,iBAAf,UACI,mDACA,kCAAKO,EAAKY,MAAM,KAAKC,QAAO,SAACC,GAAW,OAAyB,IAAlBA,EAAQC,UAAcA,OAArE,cAAwFf,EAAKe,OAA7F,iBACA,8BAAI,KAAQf,EAAKY,MAAM,KAAKG,OAA5B,cACA,yCACA,4BAAIf,UCjBLgB,MAXf,WACE,OACE,qCACA,cAACzB,EAAD,CAAQI,MAAO,cACf,qBAAKF,UAAU,iBAAf,SACA,cAACK,EAAD,CAAUI,QAAQ,0CCGPe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fe22ee0f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"/\">About</a>\r\n                </li> */}\r\n              </ul>\r\n              {/* <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n              </form> */}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n     </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const uppercase = () => {\r\n        let newText = text.toUpperCase()\r\n        settext(newText)\r\n    }\r\n\r\n    const cleartext = () => {\r\n        let newText = ''\r\n        settext(newText)\r\n    }\r\n    const handleonchange = (event) => {\r\n        settext(event.target.value)\r\n    }\r\n    const [text, settext] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleonchange} id=\"Mybox\" rows=\"8\" placeholder=\"Enter your text here\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-dark mx-2\" onClick={uppercase}> Convert to uppercase</button>\r\n                <button className=\"btn btn-dark mx-2\" onClick={cleartext}> Clear</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h1>Your text summary</h1>\r\n                <p> {text.split(\" \").filter((element)=>{return element.length !==0}).length} Words And {text.length} Charecters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes</p>\r\n                <h1>Preview</h1>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nfunction App() {\n  return (\n    <>\n    <Navbar title= \"TextUtils\"/> \n    <div className=\"container my-3\">\n    <TextForm heading=\"Enter the text to analyze below\"/>\n    </div>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}